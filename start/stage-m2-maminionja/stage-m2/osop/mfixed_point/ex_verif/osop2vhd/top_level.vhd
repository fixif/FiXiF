--
-- Generated by VHDL export
--
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_signed.all;
entity top_level is
  port(
      output    : OUT std_logic_vector( 15 downto 0);
      mult_t0_i0    : IN std_logic_vector( 15 downto 0);
      mult_xn3_i0    : IN std_logic_vector( 15 downto 0);
      mult_xn2_i0    : IN std_logic_vector( 15 downto 0);
      mult_u_i0    : IN std_logic_vector( 15 downto 0)
  );
end top_level;



architecture behavioural of top_level is

component add16
  port(
      i0    : IN std_logic_vector( 15 downto 0);
      i1    : IN std_logic_vector( 15 downto 0);
      o    : OUT std_logic_vector( 15 downto 0)
  );
end component;


component add32
  port(
      i0    : IN std_logic_vector( 31 downto 0);
      i1    : IN std_logic_vector( 31 downto 0);
      o    : OUT std_logic_vector( 31 downto 0)
  );
end component;


component constant_0b1011000001101101
  port(
      o    : OUT std_logic_vector( 15 downto 0)
  );
end component;


component mul16_16
  port(
      i0    : IN std_logic_vector( 15 downto 0);
      i1    : IN std_logic_vector( 15 downto 0);
      o    : OUT std_logic_vector( 31 downto 0)
  );
end component;


component constant_0b0100000000000000
  port(
      o    : OUT std_logic_vector( 15 downto 0)
  );
end component;


component constant_0b1001111001110111
  port(
      o    : OUT std_logic_vector( 15 downto 0)
  );
end component;


component constant_0b1011111011101100
  port(
      o    : OUT std_logic_vector( 15 downto 0)
  );
end component;


signal add_2_inter : std_logic_vector( 15 downto 0);
signal add_2_o : std_logic_vector( 15 downto 0);
signal add_2_i0 : std_logic_vector( 15 downto 0);
signal add_2_i1 : std_logic_vector( 15 downto 0);
signal add_2_i0_inter : std_logic_vector( 31 downto 0);
signal add_2_i1_inter : std_logic_vector( 31 downto 0);
signal adder1_o : std_logic_vector( 31 downto 0);
signal adder1_i0 : std_logic_vector( 31 downto 0);
signal adder1_i1 : std_logic_vector( 31 downto 0);
signal adder1_i0_inter : std_logic_vector( 31 downto 0);
signal adder1_i1_inter : std_logic_vector( 31 downto 0);
signal mult_t0_cst : std_logic_vector( 15 downto 0);
signal mult_t0_o : std_logic_vector( 31 downto 0);
signal cst_o0 : std_logic_vector( 15 downto 0);
signal mult_xn3_cst : std_logic_vector( 15 downto 0);
signal mult_xn3_o : std_logic_vector( 31 downto 0);
signal cst_o1 : std_logic_vector( 15 downto 0);
signal adder2_o : std_logic_vector( 31 downto 0);
signal adder2_i0 : std_logic_vector( 31 downto 0);
signal adder2_i1 : std_logic_vector( 31 downto 0);
signal adder2_i0_inter : std_logic_vector( 31 downto 0);
signal adder2_i1_inter : std_logic_vector( 31 downto 0);
signal mult_xn2_cst : std_logic_vector( 15 downto 0);
signal mult_xn2_o : std_logic_vector( 31 downto 0);
signal cst_o2 : std_logic_vector( 15 downto 0);
signal mult_u_cst : std_logic_vector( 15 downto 0);
signal mult_u_o : std_logic_vector( 31 downto 0);
signal cst_o3 : std_logic_vector( 15 downto 0);
begin
  iadd_add_2 : add16
  port map(
       i1 => add_2_i1,
       i0 => add_2_i0,
       o => add_2_o
  );
  output(0) <= add_2_o(0);
  output(1) <= add_2_o(1);
  output(2) <= add_2_o(2);
  output(3) <= add_2_o(3);
  output(4) <= add_2_o(4);
  output(5) <= add_2_o(5);
  output(6) <= add_2_o(6);
  output(7) <= add_2_o(7);
  output(8) <= add_2_o(8);
  output(9) <= add_2_o(9);
  output(10) <= add_2_o(10);
  output(11) <= add_2_o(11);
  output(12) <= add_2_o(12);
  output(13) <= add_2_o(13);
  output(14) <= add_2_o(14);
  output(15) <= add_2_o(15);
  iadd_adder1 : add32
  port map(
       i1 => adder1_i1,
       i0 => adder1_i0,
       o => adder1_o
  );
  add_2_i0(0) <= adder1_o(16);
  add_2_i0(1) <= adder1_o(17);
  add_2_i0(2) <= adder1_o(18);
  add_2_i0(3) <= adder1_o(19);
  add_2_i0(4) <= adder1_o(20);
  add_2_i0(5) <= adder1_o(21);
  add_2_i0(6) <= adder1_o(22);
  add_2_i0(7) <= adder1_o(23);
  add_2_i0(8) <= adder1_o(24);
  add_2_i0(9) <= adder1_o(25);
  add_2_i0(10) <= adder1_o(26);
  add_2_i0(11) <= adder1_o(27);
  add_2_i0(12) <= adder1_o(28);
  add_2_i0(13) <= adder1_o(29);
  add_2_i0(14) <= adder1_o(30);
  add_2_i0(15) <= adder1_o(31);
  constant_0b1011000001101101_i0 : constant_0b1011000001101101
  port map(
       o => cst_o0
  );
  mult_t0_cst(0) <= cst_o0(0);
  mult_t0_cst(1) <= cst_o0(1);
  mult_t0_cst(2) <= cst_o0(2);
  mult_t0_cst(3) <= cst_o0(3);
  mult_t0_cst(4) <= cst_o0(4);
  mult_t0_cst(5) <= cst_o0(5);
  mult_t0_cst(6) <= cst_o0(6);
  mult_t0_cst(7) <= cst_o0(7);
  mult_t0_cst(8) <= cst_o0(8);
  mult_t0_cst(9) <= cst_o0(9);
  mult_t0_cst(10) <= cst_o0(10);
  mult_t0_cst(11) <= cst_o0(11);
  mult_t0_cst(12) <= cst_o0(12);
  mult_t0_cst(13) <= cst_o0(13);
  mult_t0_cst(14) <= cst_o0(14);
  mult_t0_cst(15) <= cst_o0(15);
  imul_t0 : mul16_16
  port map(
       i1 => mult_t0_cst,
       i0 => mult_t0_i0,
       o => mult_t0_o
  );
  adder1_i0(0) <= mult_t0_o(0);
  adder1_i0(1) <= mult_t0_o(1);
  adder1_i0(2) <= mult_t0_o(2);
  adder1_i0(3) <= mult_t0_o(3);
  adder1_i0(4) <= mult_t0_o(4);
  adder1_i0(5) <= mult_t0_o(5);
  adder1_i0(6) <= mult_t0_o(6);
  adder1_i0(7) <= mult_t0_o(7);
  adder1_i0(8) <= mult_t0_o(8);
  adder1_i0(9) <= mult_t0_o(9);
  adder1_i0(10) <= mult_t0_o(10);
  adder1_i0(11) <= mult_t0_o(11);
  adder1_i0(12) <= mult_t0_o(12);
  adder1_i0(13) <= mult_t0_o(13);
  adder1_i0(14) <= mult_t0_o(14);
  adder1_i0(15) <= mult_t0_o(15);
  adder1_i0(16) <= mult_t0_o(16);
  adder1_i0(17) <= mult_t0_o(17);
  adder1_i0(18) <= mult_t0_o(18);
  adder1_i0(19) <= mult_t0_o(19);
  adder1_i0(20) <= mult_t0_o(20);
  adder1_i0(21) <= mult_t0_o(21);
  adder1_i0(22) <= mult_t0_o(22);
  adder1_i0(23) <= mult_t0_o(23);
  adder1_i0(24) <= mult_t0_o(24);
  adder1_i0(25) <= mult_t0_o(25);
  adder1_i0(26) <= mult_t0_o(26);
  adder1_i0(27) <= mult_t0_o(27);
  adder1_i0(28) <= mult_t0_o(28);
  adder1_i0(29) <= mult_t0_o(29);
  adder1_i0(30) <= mult_t0_o(30);
  adder1_i0(31) <= mult_t0_o(31);
  constant_0b0100000000000000_i1 : constant_0b0100000000000000
  port map(
       o => cst_o1
  );
  mult_xn3_cst(0) <= cst_o1(0);
  mult_xn3_cst(1) <= cst_o1(1);
  mult_xn3_cst(2) <= cst_o1(2);
  mult_xn3_cst(3) <= cst_o1(3);
  mult_xn3_cst(4) <= cst_o1(4);
  mult_xn3_cst(5) <= cst_o1(5);
  mult_xn3_cst(6) <= cst_o1(6);
  mult_xn3_cst(7) <= cst_o1(7);
  mult_xn3_cst(8) <= cst_o1(8);
  mult_xn3_cst(9) <= cst_o1(9);
  mult_xn3_cst(10) <= cst_o1(10);
  mult_xn3_cst(11) <= cst_o1(11);
  mult_xn3_cst(12) <= cst_o1(12);
  mult_xn3_cst(13) <= cst_o1(13);
  mult_xn3_cst(14) <= cst_o1(14);
  mult_xn3_cst(15) <= cst_o1(15);
  imul_xn3 : mul16_16
  port map(
       i1 => mult_xn3_cst,
       i0 => mult_xn3_i0,
       o => mult_xn3_o
  );
  adder1_i1(0) <= mult_xn3_o(0);
  adder1_i1(1) <= mult_xn3_o(1);
  adder1_i1(2) <= mult_xn3_o(2);
  adder1_i1(3) <= mult_xn3_o(3);
  adder1_i1(4) <= mult_xn3_o(4);
  adder1_i1(5) <= mult_xn3_o(5);
  adder1_i1(6) <= mult_xn3_o(6);
  adder1_i1(7) <= mult_xn3_o(7);
  adder1_i1(8) <= mult_xn3_o(8);
  adder1_i1(9) <= mult_xn3_o(9);
  adder1_i1(10) <= mult_xn3_o(10);
  adder1_i1(11) <= mult_xn3_o(11);
  adder1_i1(12) <= mult_xn3_o(12);
  adder1_i1(13) <= mult_xn3_o(13);
  adder1_i1(14) <= mult_xn3_o(14);
  adder1_i1(15) <= mult_xn3_o(15);
  adder1_i1(16) <= mult_xn3_o(16);
  adder1_i1(17) <= mult_xn3_o(17);
  adder1_i1(18) <= mult_xn3_o(18);
  adder1_i1(19) <= mult_xn3_o(19);
  adder1_i1(20) <= mult_xn3_o(20);
  adder1_i1(21) <= mult_xn3_o(21);
  adder1_i1(22) <= mult_xn3_o(22);
  adder1_i1(23) <= mult_xn3_o(23);
  adder1_i1(24) <= mult_xn3_o(24);
  adder1_i1(25) <= mult_xn3_o(25);
  adder1_i1(26) <= mult_xn3_o(26);
  adder1_i1(27) <= mult_xn3_o(27);
  adder1_i1(28) <= mult_xn3_o(28);
  adder1_i1(29) <= mult_xn3_o(29);
  adder1_i1(30) <= mult_xn3_o(30);
  adder1_i1(31) <= mult_xn3_o(31);
  iadd_adder2 : add32
  port map(
       i1 => adder2_i1,
       i0 => adder2_i0,
       o => adder2_o
  );
  add_2_i1(0) <= adder2_o(16);
  add_2_i1(1) <= adder2_o(17);
  add_2_i1(2) <= adder2_o(18);
  add_2_i1(3) <= adder2_o(19);
  add_2_i1(4) <= adder2_o(20);
  add_2_i1(5) <= adder2_o(21);
  add_2_i1(6) <= adder2_o(22);
  add_2_i1(7) <= adder2_o(23);
  add_2_i1(8) <= adder2_o(24);
  add_2_i1(9) <= adder2_o(25);
  add_2_i1(10) <= adder2_o(26);
  add_2_i1(11) <= adder2_o(27);
  add_2_i1(12) <= adder2_o(28);
  add_2_i1(13) <= adder2_o(29);
  add_2_i1(14) <= adder2_o(30);
  add_2_i1(15) <= adder2_o(31);
  constant_0b1001111001110111_i2 : constant_0b1001111001110111
  port map(
       o => cst_o2
  );
  mult_xn2_cst(0) <= cst_o2(0);
  mult_xn2_cst(1) <= cst_o2(1);
  mult_xn2_cst(2) <= cst_o2(2);
  mult_xn2_cst(3) <= cst_o2(3);
  mult_xn2_cst(4) <= cst_o2(4);
  mult_xn2_cst(5) <= cst_o2(5);
  mult_xn2_cst(6) <= cst_o2(6);
  mult_xn2_cst(7) <= cst_o2(7);
  mult_xn2_cst(8) <= cst_o2(8);
  mult_xn2_cst(9) <= cst_o2(9);
  mult_xn2_cst(10) <= cst_o2(10);
  mult_xn2_cst(11) <= cst_o2(11);
  mult_xn2_cst(12) <= cst_o2(12);
  mult_xn2_cst(13) <= cst_o2(13);
  mult_xn2_cst(14) <= cst_o2(14);
  mult_xn2_cst(15) <= cst_o2(15);
  imul_xn2 : mul16_16
  port map(
       i1 => mult_xn2_cst,
       i0 => mult_xn2_i0,
       o => mult_xn2_o
  );
  adder2_i0(0) <= mult_xn2_o(0);
  adder2_i0(1) <= mult_xn2_o(1);
  adder2_i0(2) <= mult_xn2_o(2);
  adder2_i0(3) <= mult_xn2_o(3);
  adder2_i0(4) <= mult_xn2_o(4);
  adder2_i0(5) <= mult_xn2_o(5);
  adder2_i0(6) <= mult_xn2_o(6);
  adder2_i0(7) <= mult_xn2_o(7);
  adder2_i0(8) <= mult_xn2_o(8);
  adder2_i0(9) <= mult_xn2_o(9);
  adder2_i0(10) <= mult_xn2_o(10);
  adder2_i0(11) <= mult_xn2_o(11);
  adder2_i0(12) <= mult_xn2_o(12);
  adder2_i0(13) <= mult_xn2_o(13);
  adder2_i0(14) <= mult_xn2_o(14);
  adder2_i0(15) <= mult_xn2_o(15);
  adder2_i0(16) <= mult_xn2_o(16);
  adder2_i0(17) <= mult_xn2_o(17);
  adder2_i0(18) <= mult_xn2_o(18);
  adder2_i0(19) <= mult_xn2_o(19);
  adder2_i0(20) <= mult_xn2_o(20);
  adder2_i0(21) <= mult_xn2_o(21);
  adder2_i0(22) <= mult_xn2_o(22);
  adder2_i0(23) <= mult_xn2_o(23);
  adder2_i0(24) <= mult_xn2_o(24);
  adder2_i0(25) <= mult_xn2_o(25);
  adder2_i0(26) <= mult_xn2_o(26);
  adder2_i0(27) <= mult_xn2_o(27);
  adder2_i0(28) <= mult_xn2_o(28);
  adder2_i0(29) <= mult_xn2_o(29);
  adder2_i0(30) <= mult_xn2_o(30);
  adder2_i0(31) <= mult_xn2_o(31);
  constant_0b1011111011101100_i3 : constant_0b1011111011101100
  port map(
       o => cst_o3
  );
  mult_u_cst(0) <= cst_o3(0);
  mult_u_cst(1) <= cst_o3(1);
  mult_u_cst(2) <= cst_o3(2);
  mult_u_cst(3) <= cst_o3(3);
  mult_u_cst(4) <= cst_o3(4);
  mult_u_cst(5) <= cst_o3(5);
  mult_u_cst(6) <= cst_o3(6);
  mult_u_cst(7) <= cst_o3(7);
  mult_u_cst(8) <= cst_o3(8);
  mult_u_cst(9) <= cst_o3(9);
  mult_u_cst(10) <= cst_o3(10);
  mult_u_cst(11) <= cst_o3(11);
  mult_u_cst(12) <= cst_o3(12);
  mult_u_cst(13) <= cst_o3(13);
  mult_u_cst(14) <= cst_o3(14);
  mult_u_cst(15) <= cst_o3(15);
  imul_u : mul16_16
  port map(
       i1 => mult_u_cst,
       i0 => mult_u_i0,
       o => mult_u_o
  );
  adder2_i1(0) <= mult_u_o(0);
  adder2_i1(1) <= mult_u_o(1);
  adder2_i1(2) <= mult_u_o(2);
  adder2_i1(3) <= mult_u_o(3);
  adder2_i1(4) <= mult_u_o(4);
  adder2_i1(5) <= mult_u_o(5);
  adder2_i1(6) <= mult_u_o(6);
  adder2_i1(7) <= mult_u_o(7);
  adder2_i1(8) <= mult_u_o(8);
  adder2_i1(9) <= mult_u_o(9);
  adder2_i1(10) <= mult_u_o(10);
  adder2_i1(11) <= mult_u_o(11);
  adder2_i1(12) <= mult_u_o(12);
  adder2_i1(13) <= mult_u_o(13);
  adder2_i1(14) <= mult_u_o(14);
  adder2_i1(15) <= mult_u_o(15);
  adder2_i1(16) <= mult_u_o(16);
  adder2_i1(17) <= mult_u_o(17);
  adder2_i1(18) <= mult_u_o(18);
  adder2_i1(19) <= mult_u_o(19);
  adder2_i1(20) <= mult_u_o(20);
  adder2_i1(21) <= mult_u_o(21);
  adder2_i1(22) <= mult_u_o(22);
  adder2_i1(23) <= mult_u_o(23);
  adder2_i1(24) <= mult_u_o(24);
  adder2_i1(25) <= mult_u_o(25);
  adder2_i1(26) <= mult_u_o(26);
  adder2_i1(27) <= mult_u_o(27);
  adder2_i1(28) <= mult_u_o(28);
  adder2_i1(29) <= mult_u_o(29);
  adder2_i1(30) <= mult_u_o(30);
  adder2_i1(31) <= mult_u_o(31);
end behavioural ;
