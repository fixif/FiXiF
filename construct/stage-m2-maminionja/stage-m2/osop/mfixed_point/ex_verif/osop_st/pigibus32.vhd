--
-- Generated by VHDL export
--
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_signed.all;
entity pigibus32 is
  port(
      a    : IN std_logic_vector( 31 downto 0);
      b    : IN std_logic_vector( 31 downto 0);
      pi    : OUT std_logic_vector( 31 downto 0);
      gi    : OUT std_logic_vector( 31 downto 0)
  );
end pigibus32;



architecture behavioural of pigibus32 is

component pigi
  port(
      a    : IN std_logic;
      b    : IN std_logic;
      pi    : OUT std_logic;
      gi    : OUT std_logic
  );
end component;


begin
  pigi_i0 : pigi
  port map(
       a => a(0),
       b => b(0),
       pi => pi(0),
       gi => gi(0)
  );
  pigi_i1 : pigi
  port map(
       a => a(1),
       b => b(1),
       pi => pi(1),
       gi => gi(1)
  );
  pigi_i2 : pigi
  port map(
       a => a(2),
       b => b(2),
       pi => pi(2),
       gi => gi(2)
  );
  pigi_i3 : pigi
  port map(
       a => a(3),
       b => b(3),
       pi => pi(3),
       gi => gi(3)
  );
  pigi_i4 : pigi
  port map(
       a => a(4),
       b => b(4),
       pi => pi(4),
       gi => gi(4)
  );
  pigi_i5 : pigi
  port map(
       a => a(5),
       b => b(5),
       pi => pi(5),
       gi => gi(5)
  );
  pigi_i6 : pigi
  port map(
       a => a(6),
       b => b(6),
       pi => pi(6),
       gi => gi(6)
  );
  pigi_i7 : pigi
  port map(
       a => a(7),
       b => b(7),
       pi => pi(7),
       gi => gi(7)
  );
  pigi_i8 : pigi
  port map(
       a => a(8),
       b => b(8),
       pi => pi(8),
       gi => gi(8)
  );
  pigi_i9 : pigi
  port map(
       a => a(9),
       b => b(9),
       pi => pi(9),
       gi => gi(9)
  );
  pigi_i10 : pigi
  port map(
       a => a(10),
       b => b(10),
       pi => pi(10),
       gi => gi(10)
  );
  pigi_i11 : pigi
  port map(
       a => a(11),
       b => b(11),
       pi => pi(11),
       gi => gi(11)
  );
  pigi_i12 : pigi
  port map(
       a => a(12),
       b => b(12),
       pi => pi(12),
       gi => gi(12)
  );
  pigi_i13 : pigi
  port map(
       a => a(13),
       b => b(13),
       pi => pi(13),
       gi => gi(13)
  );
  pigi_i14 : pigi
  port map(
       a => a(14),
       b => b(14),
       pi => pi(14),
       gi => gi(14)
  );
  pigi_i15 : pigi
  port map(
       a => a(15),
       b => b(15),
       pi => pi(15),
       gi => gi(15)
  );
  pigi_i16 : pigi
  port map(
       a => a(16),
       b => b(16),
       pi => pi(16),
       gi => gi(16)
  );
  pigi_i17 : pigi
  port map(
       a => a(17),
       b => b(17),
       pi => pi(17),
       gi => gi(17)
  );
  pigi_i18 : pigi
  port map(
       a => a(18),
       b => b(18),
       pi => pi(18),
       gi => gi(18)
  );
  pigi_i19 : pigi
  port map(
       a => a(19),
       b => b(19),
       pi => pi(19),
       gi => gi(19)
  );
  pigi_i20 : pigi
  port map(
       a => a(20),
       b => b(20),
       pi => pi(20),
       gi => gi(20)
  );
  pigi_i21 : pigi
  port map(
       a => a(21),
       b => b(21),
       pi => pi(21),
       gi => gi(21)
  );
  pigi_i22 : pigi
  port map(
       a => a(22),
       b => b(22),
       pi => pi(22),
       gi => gi(22)
  );
  pigi_i23 : pigi
  port map(
       a => a(23),
       b => b(23),
       pi => pi(23),
       gi => gi(23)
  );
  pigi_i24 : pigi
  port map(
       a => a(24),
       b => b(24),
       pi => pi(24),
       gi => gi(24)
  );
  pigi_i25 : pigi
  port map(
       a => a(25),
       b => b(25),
       pi => pi(25),
       gi => gi(25)
  );
  pigi_i26 : pigi
  port map(
       a => a(26),
       b => b(26),
       pi => pi(26),
       gi => gi(26)
  );
  pigi_i27 : pigi
  port map(
       a => a(27),
       b => b(27),
       pi => pi(27),
       gi => gi(27)
  );
  pigi_i28 : pigi
  port map(
       a => a(28),
       b => b(28),
       pi => pi(28),
       gi => gi(28)
  );
  pigi_i29 : pigi
  port map(
       a => a(29),
       b => b(29),
       pi => pi(29),
       gi => gi(29)
  );
  pigi_i30 : pigi
  port map(
       a => a(30),
       b => b(30),
       pi => pi(30),
       gi => gi(30)
  );
  pigi_i31 : pigi
  port map(
       a => a(31),
       b => b(31),
       pi => pi(31),
       gi => gi(31)
  );
end behavioural ;
