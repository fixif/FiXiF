% Fixed-point algorithm in Matlab language
% (it uses integer to simulate fixed-point)
%
% y = FDII(u)
%
% y: filtered output(s)
% u: intput(s)
%
% date: 07-Dec-2007 14:37:10
% Automatically generated by implementMATLAB / FWRToolbox


function y = FDII(u)

% initialize                   
u = round(2^11*u);y = zeros( length(u), 1 );xn = zeros(6,1);xnp = zeros(6,1);                
                               
for i=1:length(u)

    % intermediate variables    Acc0 = xn(1) * 5788;    Acc0 = Acc0 + xn(2) * -13703;    Acc0 = Acc0 + xn(3) * 17387;    Acc0 = Acc0 + xn(4) * -12469;    Acc0 = Acc0 + xn(5) * 4791;    Acc0 = Acc0 + xn(6) * -771;    Acc0 = Acc0 + u(i)  * 0;    xnp(1) = floor( Acc0/2^10 );    Acc1 = xn(1);    xnp(2) = Acc1;    Acc2 = xn(2);    xnp(3) = Acc2;    Acc3 = xn(3);    xnp(4) = Acc3;    Acc4 = xn(4);    xnp(5) = Acc4;    Acc5 = xn(5);    xnp(6) = Acc5;    % output(s)    Acc6 = xn(1) * 6336;    Acc6 = Acc6 + xn(2) * -19119;    Acc6 = Acc6 + xn(3) * 16167;    Acc6 = Acc6 + xn(4) * 4681;    Acc6 = Acc6 + xn(5) * -12891;    Acc6 = Acc6 + xn(6) * 4886;    Acc6 = Acc6 + u(i)  * 0;    y(i)   = floor( Acc6/2^4 );    %permutations    xn = xnp;
    
end

y = 2^-10*y;