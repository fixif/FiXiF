%Purpose:
% Fixed-point algorithm in Matlab language
% (it uses integer to simulate fixed-point)
%
%Syntax:
% y = filtreZ1(u)
%
%Parameters:
% y: filtered output(s)
% u: intput(s)
%
% date: 14-Jan-2010 15:02:38
% Automatically generated by implementMATLAB / FWRToolbox


function y = filtreZ1(u)

% initialize                   
u = round(2.^11.*u);y = zeros( size(u,1), 1 );xn = zeros(4,1);xnp = zeros(4,1);                
                               
for i=1:size(u,1)

    % intermediate variables    Acc0 = xn(4) * -23022;    Acc0 = Acc0 + (u(i)) * 2^13;    xnp(1) = floor( Acc0/2^15 );    Acc1 = (xn(1)) * 2^13;    Acc1 = Acc1 + xn(4) * 31606;    xnp(2) = floor( Acc1/2^15 );    Acc2 = (xn(2)) * 2^13;    Acc2 = Acc2 + xn(4) * -17745;    xnp(3) = floor( Acc2/2^14 );    Acc3 = (xn(3)) * 2^14;    Acc3 = Acc3 + xn(4) * 18978;    xnp(4) = floor( Acc3/2^13 );    % output(s)    Acc4 = floor( (xn(1) * 19126) / 2^2 );    Acc4 = Acc4 + floor( (xn(2) * -26529) / 2^2 );    Acc4 = Acc4 + xn(3) * -22452;    Acc4 = Acc4 + floor( (xn(4) * -27229) / 2^2 );    y(i)   = floor( Acc4/2^12 );    %permutations    xn = xnp;
    
end

y = 2.^--6.*y;