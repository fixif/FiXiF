%Purpose:
% Fixed-point algorithm in Matlab language
% (it uses integer to simulate fixed-point)
%
%Syntax:
% y = filterR116q(u)
%
%Parameters:
% y: filtered output(s)
% u: intput(s)
%
% date: 07-Feb-2011 00:04:31
% Automatically generated by implementMATLAB / FWRToolbox


function y = filterR116q(u)

% initialize                   
u = round(2.^11.*u);y = zeros( size(u,1), 1 );xn = zeros(6,1);                
                               
for i=1:size(u,1)

    % intermediate variables    Acc0 = xn(4) * 22571;    Acc0 = Acc0 + xn(5) * -22555;    Acc0 = Acc0 + xn(6) * -22555;    Acc0 = Acc0 + u(i)  * 22571;    T0    = floor( Acc0/2^16 );    Acc1 = floor( (xn(1) * 32360) / 2^2 );    Acc1 = Acc1 + xn(2) * -24371;    Acc1 = Acc1 + xn(3) * 24473;    T1    = floor( Acc1/2^13 );    % states    Acc2 = xn(2);    xn(1) = Acc2;    Acc3 = xn(3);    xn(2) = Acc3;    Acc4 = T0;    Acc4 = Acc4 + (T1) * 2^10;    xn(3) = floor( Acc4/2^10 );    Acc5 = xn(5);    xn(4) = Acc5;    Acc6 = xn(6);    xn(5) = Acc6;    Acc7 = u(i);    xn(6) = Acc7;    % output(s)    Acc8 = T0;    Acc8 = Acc8 + (T1) * 2^10;    y(i)  = floor( Acc8/2^10 );
    
end

y = 2.^-11.*y;