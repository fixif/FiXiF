% Fixed-point algorithm in Matlab language
% (it uses integer to simulate fixed-point)
%
% y = filtreR2(u)
%
% y: filtered output(s)
% u: intput(s)
%
% date: 14-Feb-2008 11:45:22
% Automatically generated by implementMATLAB / FWRToolbox


function y = filtreR2(u)

% initialize                   
u = round(2^15*u);y = zeros( length(u), 1 );xn = zeros(8,1);                
                               
for i=1:length(u)

    % intermediate variables    Acc00 = (xn(1)) * 2^15;    Acc00 = Acc00 + u(i)  * 343;    T0    = floor( Acc00/2^15 );    Acc01 = xn(2);    T1    = Acc01;    Acc02 = xn(3);    T2    = Acc02;    Acc03 = xn(4);    T3    = Acc03;    Acc04 = xn(5);    T4    = Acc04;    Acc05 = xn(6);    T5    = Acc05;    Acc06 = xn(7);    T6    = Acc06;    Acc07 = xn(8);    T7    = Acc07;    % states    Acc08 = T0    * -29042;    Acc08 = Acc08 + (T1) * 2^15;    Acc08 = Acc08 + (xn(1)) * 2^13;    Acc08 = Acc08 + u(i)  * 365;    xn(1) = floor( Acc08/2^13 );    Acc09 = T0    * -31211;    Acc09 = Acc09 + (T2) * 2^15;    Acc09 = Acc09 + (xn(2)) * 2^14;    Acc09 = Acc09 + u(i)  * 411;    xn(2) = floor( Acc09/2^14 );    Acc10 = T0    * -20863;    Acc10 = Acc10 + (T3) * 2^14;    Acc10 = Acc10 + (xn(3)) * 2^14;    Acc10 = Acc10 + u(i)  * 270;    xn(3) = floor( Acc10/2^14 );    Acc11 = T0    * -20493;    Acc11 = Acc11 + (T4) * 2^14;    Acc11 = Acc11 + (xn(4)) * 2^14;    Acc11 = Acc11 + u(i)  * 242;    xn(4) = floor( Acc11/2^14 );    Acc12 = T0    * -27963;    Acc12 = Acc12 + (T5) * 2^14;    Acc12 = Acc12 + (xn(5)) * 2^15;    Acc12 = Acc12 + u(i)  * 279;    xn(5) = floor( Acc12/2^15 );    Acc13 = T0    * -28792;    Acc13 = Acc13 + (T6) * 2^13;    Acc13 = Acc13 + (xn(6)) * 2^15;    Acc13 = Acc13 + u(i)  * 263;    xn(6) = floor( Acc13/2^15 );    Acc14 = T0    * -18573;    Acc14 = Acc14 + (T7) * 2^12;    Acc14 = Acc14 + (xn(7)) * 2^14;    Acc14 = Acc14 + u(i)  * 131;    xn(7) = floor( Acc14/2^14 );    Acc15 = T0    * -16574;    Acc15 = Acc15 + (xn(8)) * 2^14;    Acc15 = Acc15 + u(i)  * 131;    xn(8) = floor( Acc15/2^14 );    % output(s)    Acc16 = T0;    y(i)  = Acc16;
    
end

y = 2^-13*y;