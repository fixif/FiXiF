%Purpose:
% Fixed-point algorithm in Matlab language
% (it uses integer to simulate fixed-point)
%
%Syntax:
% y = myFilter(u)
%
%Parameters:
% y: filtered output(s)
% u: intput(s)
%
% date: 09-Jan-2010 18:46:09
% Automatically generated by implementMATLAB / FWRToolbox


function y = myFilter(u)

% initialize                   
u = round(2.^11.*u);y = zeros( size(u,1), 1 );xn = zeros(5,1);xnp = zeros(5,1);                
                               
for i=1:size(u,1)

    % intermediate variables    Acc0 = floor( (xn(1) * 32756) / 2^16 );    Acc0 = Acc0 + floor( (xn(2) * -16937) / 2^23 );    Acc0 = Acc0 + floor( (xn(3) * -24754) / 2^26 );    Acc0 = Acc0 + floor( (xn(4) * 27662) / 2^27 );    Acc0 = Acc0 + floor( (xn(5) * 30893) / 2^29 );    Acc0 = Acc0 + floor( (u(i)  * -26604) / 2^26 );    xnp(1) = Acc0* 2^1;    Acc1 = floor( (xn(1) * 16937) / 2^23 );    Acc1 = Acc1 + floor( (xn(2) * 32736) / 2^16 );    Acc1 = Acc1 + floor( (xn(3) * -17858) / 2^23 );    Acc1 = Acc1 + floor( (xn(4) * 19338) / 2^26 );    Acc1 = Acc1 + floor( (xn(5) * 32522) / 2^28 );    Acc1 = Acc1 + floor( (u(i)  * 19274) / 2^25 );    xnp(2) = Acc1* 2^1;    Acc2 = floor( (xn(1) * -24754) / 2^26 );    Acc2 = Acc2 + floor( (xn(2) * 17858) / 2^23 );    Acc2 = Acc2 + floor( (xn(3) * 32703) / 2^16 );    Acc2 = Acc2 + floor( (xn(4) * 17557) / 2^24 );    Acc2 = Acc2 + floor( (xn(5) * 28048) / 2^27 );    Acc2 = Acc2 + floor( (u(i)  * -19966) / 2^25 );    xnp(3) = Acc2* 2^1;    Acc3 = floor( (xn(1) * -27662) / 2^25 );    Acc3 = Acc3 + floor( (xn(2) * 19338) / 2^24 );    Acc3 = Acc3 + floor( (xn(3) * -17557) / 2^22 );    Acc3 = Acc3 + floor( (xn(4) * 32682) / 2^16 );    Acc3 = Acc3 + floor( (xn(5) * -19751) / 2^24 );    Acc3 = Acc3 + floor( (u(i)  * -27255) / 2^25 );    xnp(4) = Acc3* 2^1;    Acc4 = floor( (xn(1) * 30893) / 2^25 );    Acc4 = Acc4 + floor( (xn(2) * -32522) / 2^24 );    Acc4 = Acc4 + floor( (xn(3) * 28048) / 2^23 );    Acc4 = Acc4 + floor( (xn(4) * 19751) / 2^22 );    Acc4 = Acc4 + floor( (xn(5) * 32610) / 2^16 );    Acc4 = Acc4 + floor( (u(i)  * 18366) / 2^24 );    xnp(5) = Acc4* 2^1;    % output(s)    Acc5 = floor( (xn(1) * -26604) / 2^17 );    Acc5 = Acc5 + floor( (xn(2) * -19274) / 2^16 );    Acc5 = Acc5 + floor( (xn(3) * -19966) / 2^16 );    Acc5 = Acc5 + floor( (xn(4) * 27255) / 2^18 );    Acc5 = Acc5 + floor( (xn(5) * 18366) / 2^19 );    Acc5 = Acc5 + floor( (u(i)  * 25216) / 2^29 );    y(i)   = Acc5* 2^1;    %permutations    xn = xnp;
    
end

y = 2.^-10.*y;